// Code generated by " ../../base/gtl/generate.py --output=record_pool_race.go --prefix=Record -DELEM=*RecordWithScratchBuf --package=sam ../../base/gtl/randomized_freepool_race.go.tpl ". DO NOT EDIT.

// +build race

package sam

import "sync/atomic"

type RecordFreePool struct {
	new func() *RecordWithScratchBuf
	len int64
}

func NewRecordFreePool(new func() *RecordWithScratchBuf, maxSize int) *RecordFreePool {
	return &RecordFreePool{new: new}
}

func (p *RecordFreePool) Put(x *RecordWithScratchBuf) {
	atomic.AddInt64(&p.len, -1)
}

func (p *RecordFreePool) Get() *RecordWithScratchBuf {
	atomic.AddInt64(&p.len, 1)
	return p.new()
}

func (p *RecordFreePool) ApproxLen() int { return int(atomic.LoadInt64(&p.len)) }
